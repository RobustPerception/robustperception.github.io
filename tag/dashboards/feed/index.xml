<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>dashboards &#8211; Robust Perception | Prometheus Monitoring Experts</title>
	<atom:link href="/tag/dashboards/feed" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Prometheus Monitoring Experts</description>
	<lastBuildDate>Wed, 08 Nov 2017 14:32:43 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9.3</generator>

<image>
	<url>/wp-content/uploads/2015/07/cropped-robust-icon-32x32.png</url>
	<title>dashboards &#8211; Robust Perception | Prometheus Monitoring Experts</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Who wants seconds?</title>
		<link>/who-wants-seconds</link>
		
		<dc:creator><![CDATA[Brian Brazil]]></dc:creator>
		<pubDate>Mon, 12 Sep 2016 07:06:45 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[best practices]]></category>
		<category><![CDATA[dashboards]]></category>
		<category><![CDATA[instrumentation]]></category>
		<category><![CDATA[prometheus]]></category>
		<guid isPermaLink="false">http://www.robustperception.io/?p=2191</guid>

					<description><![CDATA[The Prometheus instrumentation guidelines say to use seconds, and the timing functions in client libraries follow this. Why? If you've interacted a few monitoring systems and instrumented libraries you'll have come across data exposed in a variety of units. Seconds, milliseconds, microseconds, and nanoseconds are common. The choice is often tied to what time sources are easy to access for a [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>HAProxy dashboards with Prometheus</title>
		<link>/haproxy-dashboards-with-prometheus</link>
		
		<dc:creator><![CDATA[Brian Brazil]]></dc:creator>
		<pubDate>Wed, 11 Nov 2015 21:14:32 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[console templates]]></category>
		<category><![CDATA[dashboards]]></category>
		<category><![CDATA[haproxy]]></category>
		<category><![CDATA[prometheus]]></category>
		<guid isPermaLink="false">http://www.robustperception.io/?p=1089</guid>

					<description><![CDATA[HAProxy is one of many pieces of software that Prometheus provides an integration with. Let's look at how to hook it in and use the built-in console template dashboard. HAProxy doesn't provide pre-built binaries, so we start by compiling it: wget http://www.haproxy.org/download/1.6/src/haproxy-1.6.2.tar.gz tar -xzf haproxy-*.tar.gz cd haproxy-* make TARGET=generic Next we'll configure one a simple [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Setting up Grafana for Prometheus</title>
		<link>/setting-up-grafana-for-prometheus</link>
		
		<dc:creator><![CDATA[Brian Brazil]]></dc:creator>
		<pubDate>Sun, 01 Nov 2015 13:29:49 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[dashboards]]></category>
		<category><![CDATA[grafana]]></category>
		<category><![CDATA[prometheus]]></category>
		<guid isPermaLink="false">http://www.robustperception.io/?p=1043</guid>

					<description><![CDATA[Grafana recently added support for Prometheus. Let's take a look at how to get it up and running. First let's setup a quick Prometheus server to scrape itself so we have some metrics to play with: wget https://github.com/prometheus/prometheus/releases/download/v2.0.0/prometheus-2.0.0.linux-amd64.tar.gz tar -xzf prometheus-2.0.0.linux-amd64.tar.gz cd prometheus-* cat &#60;&#60;'EOF' &#62; prometheus.yml global: scrape_interval: 10s evaluation_interval: 10s scrape_configs: - job_name: [&#8230;]]]></description>
		
		
		
			</item>
	</channel>
</rss>
